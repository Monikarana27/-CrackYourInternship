class Solution {
    public int maxScore(int[] cardPoints, int k) {
        int n = cardPoints.length;

        int currentSum = 0;

        // Calculate the initial sum of the first k cards
        for(int i = 0; i < k; i++) {
            currentSum += cardPoints[i];
        }
        
        int maxSum = currentSum;

        // Sliding window approach: Replace one card from the start with one from the end
        for(int i = 0; i < k; i++) {
            currentSum = currentSum - cardPoints[k-1-i] + cardPoints[n-1-i];
            maxSum = Math.max(maxSum, currentSum);
        }

        return maxSum;
    }
}
